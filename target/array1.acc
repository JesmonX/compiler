fn @getint( ) -> i32;
fn @getch( ) -> i32;
fn @getarray(#0: i32* ) -> i32;
fn @putint(#0: i32 ) -> ();
fn @putch(#0: i32 ) -> ();
fn @putarray(#0: i32, #1: i32* ) -> ();
fn @starttime( ) -> ();
fn @stoptime( ) -> ();
fn @main( ) -> i32 {
%entry:
  let %ret.addr = alloca i32, 1 // Users: 
  let %a.addr = alloca i32, 10 // Users: %2: i32*, %0: i32*, 
  let %0: i32* = offset i32, %a.addr, [2 < 10] // Users: %1: (), 
  let %1: () = store 4, %0: i32* // Users: 
  let %2: i32* = offset i32, %a.addr, [2 < 10] // Users: %3: i32, 
  let %3: i32 = load %2: i32* // Users: %4: (), 
  let %4: () = call @putint, %3: i32 // Users: 
  jmp label %return // Users: 
%return:
  ret 0 // Users: 
}
