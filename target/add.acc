fn @getint( ) -> i32;
fn @getch( ) -> i32;
fn @getarray(#0: i32* ) -> i32;
fn @putint(#0: i32 ) -> ();
fn @putch(#0: i32 ) -> ();
fn @putarray(#0: i32, #1: i32* ) -> ();
fn @starttime( ) -> ();
fn @stoptime( ) -> ();
fn @main( ) -> i32 {
%entry:
  let %0: i32** = alloca i32*, 0 // Users: %8: (), 
  let %b.addr = alloca i32, 0 // Users: %4: i32, 
  let %a.addr = alloca i32, 0 // Users: %1: i32, 
  let %1: i32 = load %a.addr // Users: %2: (), 
  let %2: () = store 10, %1: i32 // Users: 
  let %3: i32 = sub 0, 1 // Users: %5: (), 
  let %4: i32 = load %b.addr // Users: %5: (), 
  let %5: () = store %3: i32, %4: i32 // Users: 
  let %6: i32 = add %a, %b // Users: %7: (), 
  let %7: () = call @putint, %6: i32 // Users: 
  let %8: () = store 0, %0: i32** // Users: 
  jmp label %return // Users: 
%return:
}
